//pipeline {
  // agent any 
    //stages{
    node("Slave1"){
        stage("Build") {
                sh """
                tee /home/ubuntu/pod.yml <<-'EOF'
apiVersion: v1
kind: Pod
metadata:
  name: hw3
  labels:
    app: hw3
spec:
  containers:
    - image: training/webapp:1
      name: webapp
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
EOF
            """
                echo "build"
                
        }
        stage("Deploy") {                
            script {
                
                   try{
                       
                        //kubernetesDeploy configs: 'ttt.yml', kubeConfig: [path: ''], kubeconfigId: 'k8s-test', secretName: '', ssh: [sshCredentialsId: '*', sshServer: ''], textCredentials: [certificateAuthorityData: '', clientCertificateData: '', clientKeyData: '', serverUrl: 'https://']
                        sh """kubectl apply -f /home/ubuntu/pod.yml > /home/ubuntu/startPod.log"""
                        echo "try"
                   }catch(error){
                       echo "catch"
                        //kubectl create -f
                   }
                }
            
        }
        stage("Test") {
            sh """kubectl get pods > /home/ubuntu/getPods.log"""
            echo "test"
            //curl...
             
            }
        }
    //}
    
//}